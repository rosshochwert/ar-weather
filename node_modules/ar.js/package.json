{
  "_args": [
    [
      {
        "raw": "https://github.com/jeromeetienne/AR.js.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/jeromeetienne/AR.js.git",
        "spec": "git+https://github.com/jeromeetienne/AR.js.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:jeromeetienne/AR.js.git",
          "sshUrl": "git+ssh://git@github.com/jeromeetienne/AR.js.git",
          "httpsUrl": "git+https://github.com/jeromeetienne/AR.js.git",
          "gitUrl": "git://github.com/jeromeetienne/AR.js.git",
          "shortcut": "github:jeromeetienne/AR.js",
          "directUrl": "https://raw.githubusercontent.com/jeromeetienne/AR.js/master/package.json"
        }
      },
      "/Users/user/Desktop/Projects/arweather"
    ]
  ],
  "_from": "git+https://github.com/jeromeetienne/AR.js.git",
  "_id": "ar.js@1.5.5",
  "_inCache": true,
  "_location": "/ar.js",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/jeromeetienne/AR.js.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/jeromeetienne/AR.js.git",
    "spec": "git+https://github.com/jeromeetienne/AR.js.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:jeromeetienne/AR.js.git",
      "sshUrl": "git+ssh://git@github.com/jeromeetienne/AR.js.git",
      "httpsUrl": "git+https://github.com/jeromeetienne/AR.js.git",
      "gitUrl": "git://github.com/jeromeetienne/AR.js.git",
      "shortcut": "github:jeromeetienne/AR.js",
      "directUrl": "https://raw.githubusercontent.com/jeromeetienne/AR.js/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git+https://github.com/jeromeetienne/AR.js.git#2234ebae28e41afea68475e438ee6179d734c985",
  "_shasum": "13604ecc7a8410f0cfc166f92da1c3b938a997cb",
  "_shrinkwrap": null,
  "_spec": "https://github.com/jeromeetienne/AR.js.git",
  "_where": "/Users/user/Desktop/Projects/arweather",
  "author": {
    "name": "jerome.etienne@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/jeromeetienne/AR.js/issues"
  },
  "dependencies": {},
  "description": "Efficient Augmented Reality for the Web",
  "devDependencies": {},
  "gitHead": "2234ebae28e41afea68475e438ee6179d734c985",
  "homepage": "https://github.com/jeromeetienne/AR.js#readme",
  "keywords": [
    "AR",
    "VR",
    "three.js"
  ],
  "license": "MIT",
  "main": "three.js",
  "name": "ar.js",
  "optionalDependencies": {},
  "readme": "# AR.js - Efficient Augmented Reality for the Web\n\nI am focusing hard on making AR for the web a reality.\nThis repository is where I publish the code.\nContact me anytime [@jerome_etienne](https://twitter.com/jerome_etienne).\nStuff are still moving fast, We reached a good status tho.\nAn article has been published on [uploadvr](https://uploadvr.com/ar-js-efficient-augmented-reality-for-the-web/).\nSo I wanted to publish thus people can try it and have fun with it :)\n\n- **Very Fast** : it runs efficiently even on phones. [60 fps on my 2 year-old phone](https://twitter.com/jerome_etienne/status/831333879810236421)!\n- **Web-based** : It is a pure web solution, so no installation required. Full javascript based on three.js + jsartoolkit5\n- **Open Source** : It is completely open source and free of charge!\n- **Standards** : It works on any phone with [webgl](http://caniuse.com/#feat=webgl) and [webrtc](http://caniuse.com/#feat=stream)\n\n[![AR.js 1.0 Video](https://cloud.githubusercontent.com/assets/252962/23441016/ab6900ce-fe17-11e6-971b-24614fb8ac0e.png)](https://youtu.be/0MtvjFg7tik)\n\n\n\nIf you wanna chat, check [![Gitter chat](https://badges.gitter.im/AR-js/Lobby.png)](https://gitter.im/AR-js/Lobby)\n\n# Try it on Mobile\n\nIt works on all platforms. Android, IOS and window phone. It run **any browser with WebGL and WebRTC**.\n(for IOS, you need to update to ios11)\n\nTo try on your phone is only 2 easy steps, check it out!\n\n1. Open this [hiro marker image](https://jeromeetienne.github.io/AR.js/data/images/HIRO.jpg) in your desktop browser.\n1. Open this [augmented reality webapps](https://jeromeetienne.github.io/AR.js/three.js/examples/mobile-performance.html) in your phone browser, and point it\nto your screen.\n\n**You are done!** It will open a webpage which read the phone webcam, localize a hiro marker and add 3d on top of it, as you can see below.\n\n![screenshot](https://cloud.githubusercontent.com/assets/252962/23072106/73a0656c-f528-11e6-9fcd-3c900d1d47d3.jpg)\n\n# Standing on the Shoulders of Giants\n\nSo we shown it is now possible to do 60fps web-based augmented reality on a phone.\nThis is great for sure but how did we get here ? **By standing on the shoulders of giants!**\nIt is thanks to the hard work from others, that we can today reach this mythic 60fps AR.\nSo i would like to thanks :\n\n- **three.js** for being a great library to do 3d on the web.\n- **artoolkit**! years of development and experiences on doing augmented reality\n- **emscripten and asm.js**! thus we could compile artoolkit c into javascript\n- **chromium**! thanks for being so fast!\n\nOnly thanks to all of them, i could do my part : Optimizing performance from 5fps on high-end\nphone, to 60fps on 2years old phone.\n\nAfter all this work done by a lot of people, we have a *web-based augmented reality solution fast enough for mobile*!\n\nNow, many people got a phone powerful enough to do web AR in their pocket.\nI think this performance improvement makes web AR a reality.\ni am all exited by what people are gonna with it :)\n\n# Performance\n\nWe are still early in the project but here are some initial numbers to give you an idea.\n\n- I got 60fps stable on nexus6p\n- Some reports [Sony Xperia Z2 (2.5 years old) runs around 50fps](https://twitter.com/leinadkalpot/status/834121238087925763) - this is a 170euro phone\n- Some reports [~50fps on a old nexus5, and ~60fps on nexus 9](https://twitter.com/Ellyll/status/834312442926751744) - nexus5 is 3.5 years old!\n- Some reports it working on windows phone edge!! [13fps on Lumia 950](https://twitter.com/leinadkalpot/status/834299384510763012) for some.\n  [40-45fps on lumia 930](https://twitter.com/fastclemmy/status/834817155665391616) for others.\n\nObviously you mileage may vary. The performance you get will depend on 3 things: How heavy your 3D is, How you tune your parameters\nand the hardware that you are using.\n\n![screenshot](https://cloud.githubusercontent.com/assets/252962/23068128/40343608-f51a-11e6-8cb3-900e37a7f658.jpg)\n\n# Full Featured Marker based\nWith this project, we bring more performance to artoolkit.\nartoolkit is a software with years of experience doing augmented reality. It is able to do a lot!\n\nIt is marker based. It supports a wide range of markers: multiple types of markers [pattern](https://artoolkit.org/documentation/doku.php?id=3_Marker_Training:marker_training)/[barcode](https://artoolkit.org/documentation/doku.php?id=3_Marker_Training:marker_barcode)\nmultiple independent markers at the same time, or [multiple markers acting as a single marker](https://artoolkit.org/documentation/doku.php?id=3_Marker_Training:marker_multi)\nup to you to choose.\n\n# What‚Äôs New?\nRecently, we‚Äôve been getting creative and working on developing new things with AR.js. One of them is playing around with [shadows](https://twitter.com/jerome_etienne/status/837240034847764480), syncing the position of virtual lights with reality for a more life-like finish:\n![screen shot 2017-03-16 at 21 06 24](https://cloud.githubusercontent.com/assets/6317076/24018623/7f787ba8-0a8c-11e7-8088-fea4799b5d09.png)\n\nWe‚Äôve been collaborating very closely with [Fredrick Blomqvist](https://twitter.com/snigelpaogat). His input has had a great impact on AR.js innovation and we want to thank him. Together, we‚Äôve been implementing [refraction](https://twitter.com/jerome_etienne/status/838749280999518208), giving the 3d a transparent/glassy effect. It ended up having a nice polished look. What do you guys think?\n![screen shot 2017-03-06 at 16 31 28](https://cloud.githubusercontent.com/assets/6317076/23832948/9b64c79e-0736-11e7-9cb8-747f6a8fc082.png)\n\nOther crazy ideas we‚Äôve been working on include a [hole in the wall](https://twitter.com/jerome_etienne/status/836754117964017664) and a [portal into another world](https://twitter.com/jerome_etienne/status/838404908235776000). We want to take AR.js to new dimensions.\n![screen shot 2017-03-12 at 15 19 51](https://cloud.githubusercontent.com/assets/6317076/23833024/b2e045be-0737-11e7-9ef0-8e1ac9e49ba8.png)\n![screen shot 2017-03-07 at 10 08 39](https://cloud.githubusercontent.com/assets/6317076/23833015/947f6abe-0737-11e7-9a0d-1ea919f6ffbe.png)\n\n# principles\n- \"Shared #ar is a lot more real than solo #AR.\" - Augmented reality principle [tweet](https://twitter.com/jerome_etienne/status/847889867296124933)\n- \"The marker must be a portal from where the virtual emerges.\" by @AndraConnect - #AR principles at dinner üòè [tweet](https://twitter.com/jerome_etienne/status/842112692211056640)\n\n# Status\n- At the three.js level is the main one. It is working well and efficiently\n- a-frame component - it export ```<a-marker>``` tag. It becomes real easy to use.\n  It allows the things three.js extension does. Here are some slides\n  [aframe-artoolkit](http://jeromeetienne.github.io/slides/artoolkit-aframe/)\n- webvr-polyfill: it is kind of working - still a work-in-progress\n\n# Augmented reality for the web in less than 10 lines of html\n\nA-Frame magic :) All details are explained in this super post\n[\"Augmented Reality in 10 Lines of HTML - AR.js with a-frame magic\"](https://medium.com/arjs/augmented-reality-in-10-lines-of-html-4e193ea9fdbf)\nby\n[@AndraConnect](https://twitter.com/AndraConnect).\n\n```html\n<!doctype HTML>\n<html>\n<script src=\"https://aframe.io/releases/0.6.1/aframe.min.js\"></script>\n<script src=\"https://cdn.rawgit.com/jeromeetienne/AR.js/1.5.0/aframe/build/aframe-ar.js\"> </script>\n  <body style='margin : 0px; overflow: hidden;'>\n    <a-scene embedded arjs>\n  \t<a-marker preset=\"hiro\">\n            <a-box position='0 0.5 0' material='color: black;'></a-box>\n  \t</a-marker>\n  \t<a-entity camera></a-entity>\n    </a-scene>\n  </body>\n</html>\n```\n\nSee on [codepen](https://codepen.io/jeromeetienne/pen/mRqqzb) or [bl.ocks.org](https://bl.ocks.org/jeromeetienne/feeb69257803e69f18dc3ea5f4fc6d71)\n\n# Posts on medium\nWe started a [AR.js blog](https://medium.com/arjs), thus we can write about\nall the crazy ideas related to AR.js.\n\n- [\"Area Learning with Multi-Markers in AR.js - For a Larger & More Stable Augmented Reality\"](https://medium.com/arjs/area-learning-with-multi-markers-in-ar-js-1ff03a2f9fbe)\n  by [@AndraConnect](https://twitter.com/AndraConnect)\n- [\"WebVR for Augmented Reality - Using WebVR to write cross-platform AR applications\"](https://medium.com/arjs/webvr-for-augmented-reality-f1e69a505902)\n  by [@jerome_etienne](https://twitter.com/jerome_etienne)\n- [\"Augmenting The Web Page - Bringing augmenting reality to normal web pages\"](https://medium.com/arjs/augmenting-the-web-page-e893f2d199b8)\n  by [@jerome_etienne](https://twitter.com/jerome_etienne)\n- [\"Server Rendering for Augmented Reality - Cloud Rendering with Web Standards\"](https://medium.com/arjs/server-rendering-for-augmented-reality-2de0a71aae04)\n  by [@jerome_etienne](https://twitter.com/jerome_etienne)\n- [\"AR-Code:a Fast Path to Augmented Reality - From qrcode to AR.js content\"](https://medium.com/arjs/ar-code-a-fast-path-to-augmented-reality-60e51be3cbdf)\n  by [@jerome_etienne](https://twitter.com/jerome_etienne)\n- [\"Augmented Reality in 10 Lines of HTML - AR.js with a-frame magic\"](https://medium.com/arjs/augmented-reality-in-10-lines-of-html-4e193ea9fdbf)\n  by [@AndraConnect](https://twitter.com/AndraConnect)\n\n# Great Posts by Users\n\n- How to write a AR.js application ?\nHere is a [full tutorial](https://marmelab.com/blog/2017/06/19/augmented-reality-html5.html)\nby [marmelab](https://marmelab.com/) featuring [Fran√ßois Zaninotto](https://twitter.com/francoisz).\nIt explain how to code a full application on phone! Step by Steps, with explaination and videos. \nVery great! the perfect step if you want to start writing AR application today.\n- Great post about [WebAR for designer](http://www.nexusinteractivearts.com/webar/)\nby [nexus interactive arts](http://www.nexusinteractivearts.com/)\n\n# Augmented Website\n[Seminal post](https://medium.com/arjs/augmenting-the-web-page-e893f2d199b8) explaining the concept.\nThe service is available [webxr.io/augmented-website](https://webxr.io/augmented-website/)\n\n[![Augmented Website](https://user-images.githubusercontent.com/252962/27472386-0d11e59a-57f3-11e7-9fa5-34332c5484f7.png)](https://webxr.io/augmented-website/)\n\n\n# Examples\n\nSome applications:\n\n- [Pattern Marker Training](https://jeromeetienne.github.io/AR.js/three.js/examples/marker-training/examples/generator.html) :\n  Generate a [pattern marker](https://artoolkit.org/documentation/doku.php?id=3_Marker_Training:marker_training) with your own image.\n- [ARCode Generator](https://jeromeetienne.github.io/AR.js/three.js/examples/arcode.html) :\n  Generator of AR-Code\n  ([source](https://github.com/jeromeetienne/AR.js/blob/master/three.js/examples/arcode.html))\n- [WebAR Playground](https://jeromeetienne.github.io/webar-playground/) :\n  Playground running in WebAR with ar.js/chromiumAR\n\n[ALL EXAMPLES](https://jeromeetienne.github.io/AR.js-docs/misc/EXAMPLES.html)\n\n# Folders\n- ```/three.js``` is the extension to use it with [pure three.js](https://threejs.org)\n- ```/aframe``` is the extension to use it with [a-frame](https://aframe.io)\n- ```/webvr-polyfill``` is the WebVR polyfill so you can reuse your #AR / #VR content easily\n\n# Licenses\nIt is **all open source** ! jsartoolkit5 is under LGPLv3 license and additional permission.\nAnd All my code in AR.js repository is under MIT license. :)\n\nFor legal details, be sure to check [jsartoolkit5 license](https://github.com/artoolkit/jsartoolkit5/blob/master/LICENSE.txt)\nand [AR.js license](https://github.com/jeromeetienne/AR.js/blob/master/LICENSE.txt).\n\n# Change Log\n[CHANGELOG.md](https://github.com/jeromeetienne/AR.js/blob/master/CHANGELOG.md)\n\n# What's Next ?\n\nWe did good on performance, but there are still a lot of room for optimisation.\nUsing [webworkers](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers)\nwould increase cpu usage. Compiling in [webassembly](https://webassembly.org) instead\nof [asm.js](http://asmjs.org/) should improve loading time and likely cpu performance.\nAnd obviously, we can still do more parameters tweaking :)\n\n\nI would like people start experience augmented reality and play with it.\nThis is highly creative! Just look at this [puzzle game in #AR playing with mirror and laser beam](https://www.youtube.com/watch?v=OzLJb7HitvA).\nYou could do it with AR.js, so opensource and running on normal phones, no need to buy a new device. isn't that great!\n\n\nAugmented reality on phone have applications in many fields:\n[history education](https://www.youtube.com/watch?v=gyp8ZYtyu_M)\n, [science](https://www.youtube.com/watch?v=gMxdBdLpVgc)\nor [gaming](https://www.youtube.com/watch?v=kEMDgvfFUcI).\nI exited to see what people will do with AR.js :)\n\n\n# Browser Support\nDemo tested on the following browser setups:\n- **Desktop Chrome with webcam and 2 tabs** (one for Hero, one for result) (works!)\n- **Android native 4.4.2** (doesn't work, doesn't ask for permission to use camera. I see white background and text)\n- **Android native 5.0** (doesn't work, doesn't ask for permission, I see white background and text)\n- **Chrome on Android 4.4.2** (works!)\n- **Chrome on Android 5.0** (doesn't work, asks for permission, I see black background, text and a chart)\n- **Safari and Chrome on iOS 8.2 (iPad)** (doesn't work, doesn't ask for permission, I see white background and text)\n- **Microsoft Edge on Windows 10** (Chrome on Google Pixel phone to view hologram)\n\nCredits: @HelloDeadline, @sorianog\n\n\n# Future\n\n[FUTURE.md](https://jeromeetienne.github.io/AR.js-docs/misc/FUTURE.html)\n\n# FAQ\n\n[FAQ.md](https://jeromeetienne.github.io/AR.js-docs/misc/FAQ.html)\n\n\n\n# How To Release ?\n\nThis one is mainly for [me](@jerome_etienne) to remember :)\n\n```bash\n# Update CHANGELOG.md - remove the -dev into version\natom CHANGELOG.md\n\n# replace REVISION to the proper version, search/replace on the version string should do it\natom three.js/src/threex/threex-artoolkitcontext.js package.json README.md\n\n# Rebuild and minify everything - aka a-frame and three.js\nmake minify\n\n# Commit everything\ngit add . && git commit -a -m 'Last commit before release'\n\n# Go to master branch\ngit checkout master\n\n# Merge dev branch into master branch\ngit merge dev\n\n# tag the release\ngit tag 1.5.5\n\n# push the tag on github\ngit push origin --tags\n\n# push commits tag on github\ngit push\n\n# update npm package.json\nnpm publish\n\n# Come back to dev branch\ngit checkout dev\n\n# Update CHANGELOG.md - start new dev version\natom CHANGELOG.md\n\n# update the a-frame codepen if needed\nopen \"https://codepen.io/jeromeetienne/pen/mRqqzb?editors=1000#0\"\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jeromeetienne/AR.js.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.5.5"
}
